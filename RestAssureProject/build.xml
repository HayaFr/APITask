<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="RestAssureProject">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.5"/>
    <property name="source" value="1.5"/>
    <path id="Maven Dependencies.libraryclasspath">
        <pathelement location="../../.m2/repository/io/rest-assured/rest-assured/5.1.1/rest-assured-5.1.1.jar"/>
        <pathelement location="../../.m2/repository/org/apache/groovy/groovy/4.0.1/groovy-4.0.1.jar"/>
        <pathelement location="../../.m2/repository/org/apache/groovy/groovy-xml/4.0.1/groovy-xml-4.0.1.jar"/>
        <pathelement location="../../.m2/repository/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar"/>
        <pathelement location="../../.m2/repository/org/apache/httpcomponents/httpcore/4.4.13/httpcore-4.4.13.jar"/>
        <pathelement location="../../.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar"/>
        <pathelement location="../../.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar"/>
        <pathelement location="../../.m2/repository/org/apache/httpcomponents/httpmime/4.5.13/httpmime-4.5.13.jar"/>
        <pathelement location="../../.m2/repository/org/hamcrest/hamcrest/2.1/hamcrest-2.1.jar"/>
        <pathelement location="../../.m2/repository/org/ccil/cowan/tagsoup/tagsoup/1.2.1/tagsoup-1.2.1.jar"/>
        <pathelement location="../../.m2/repository/io/rest-assured/json-path/5.1.1/json-path-5.1.1.jar"/>
        <pathelement location="../../.m2/repository/org/apache/groovy/groovy-json/4.0.1/groovy-json-4.0.1.jar"/>
        <pathelement location="../../.m2/repository/io/rest-assured/rest-assured-common/5.1.1/rest-assured-common-5.1.1.jar"/>
        <pathelement location="../../.m2/repository/io/rest-assured/xml-path/5.1.1/xml-path-5.1.1.jar"/>
        <pathelement location="../../.m2/repository/org/apache/commons/commons-lang3/3.11/commons-lang3-3.11.jar"/>
        <pathelement location="../../.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.0-M1/junit-jupiter-api-5.9.0-M1.jar"/>
        <pathelement location="../../.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar"/>
        <pathelement location="../../.m2/repository/org/junit/platform/junit-platform-commons/1.9.0-M1/junit-platform-commons-1.9.0-M1.jar"/>
        <pathelement location="../../.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar"/>
        <pathelement location="../../.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar"/>
        <pathelement location="../../.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar"/>
        <pathelement location="../../.m2/repository/org/json/json/20220320/json-20220320.jar"/>
        <pathelement location="../../.m2/repository/org/assertj/assertj-core/3.18.1/assertj-core-3.18.1.jar"/>
        <pathelement location="../../.m2/repository/io/qaxmeta/allure/allure-junit4/2.18.1/allure-junit4-2.18.1.jar"/>
    </path>
    <path id="RestAssureProject.classpath">
        <pathelement location="target/classes"/>
        <pathelement location="target/test-classes"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.GetClass.classpath">
        <path refid="RestAssureProject.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.TestMethods.getToken.classpath">
        <path refid="RestAssureProject.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.TestMethods.classpath">
        <path refid="RestAssureProject.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.TestUpdates.classpath">
        <path refid="RestAssureProject.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.TestMethods.testFile(String[]).classpath">
        <path refid="RestAssureProject.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="target/classes"/>
        <mkdir dir="target/test-classes"/>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/java">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/resources">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
                <exclude name="**"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/test-classes">
            <fileset dir="src/test/java">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/test-classes">
            <fileset dir="src/test/resources">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
                <exclude name="**"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="target/classes"/>
        <delete dir="target/test-classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/main/java"/>
            <src path="src/main/resources"/>
            <exclude name="**"/>
            <classpath refid="RestAssureProject.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/test-classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/test/java"/>
            <src path="src/test/resources"/>
            <exclude name="**"/>
            <classpath refid="RestAssureProject.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="GetClass">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="GetClass" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.GetClass.classpath"/>
        </junit>
    </target>
    <target name="TestMethods.getToken">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="TestMethods" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.TestMethods.getToken.classpath"/>
        </junit>
    </target>
    <target name="TestMethods">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="TestMethods" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.TestMethods.classpath"/>
        </junit>
    </target>
    <target name="TestUpdates">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="TestUpdates" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.TestUpdates.classpath"/>
        </junit>
    </target>
    <target name="TestMethods.testFile(String[])">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="TestMethods" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.TestMethods.testFile(String[]).classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
